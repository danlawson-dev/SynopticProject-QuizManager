@using QuizManager.Models.Helpers

@model QuizDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="page-heading row">
    <div class="col-sm-6 text-sm-start col-12 text-center px-4 d-flex">
        <a class="btn btn-primary me-2" asp-area="" asp-controller="Quiz" asp-action="List">Home</a>
        <h1>Quiz: @Model.QuizTitle</h1>
    </div>
    @if (Model.UserHasFullRights)
    {
        <div class="col-sm-6 text-sm-end col-12 text-center px-4">
            <a class="btn btn-warning me-2" asp-area="" asp-controller="Quiz" asp-action="Update" asp-route-quizId="@Model.QuizId">Edit quiz</a>
            <a class="btn btn-danger" asp-area="" asp-controller="Quiz" asp-action="Delete" asp-route-quizId="@Model.QuizId">Delete quiz</a>
        </div>
    }
</div>

<div class="row">
    <div class="col-sm-6 text-sm-start col-12 text-center px-4 d-flex">
        <h2>Questions</h2>
    </div>
    @if (Model.UserHasFullRights)
    {
        <div class="col-sm-6 text-sm-end col-12 text-center px-4">
            <a class="btn btn-primary" asp-area="" asp-controller="Question" asp-action="Update" asp-route-quizId="@Model.QuizId" asp-route-questionSequence="@Model.NextQuestionSequence">Add question</a>
        </div>
    }
</div>
@if (Model.HasQuestions)
{
    <div class="accordion accordion-flush" id="accordionFlush">
        @{
            int i = 1;
            foreach (QuizDetailsQuestionsViewModel question in Model.Questions)
            {
                <div class="accordion-item">
                    <h2 class="accordion-header" id="flush-@i">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-@i" aria-expanded="false" aria-controls="flush-collapse-@i">
                            @question.QuestionSequence - @question.QuestionTitle 
                            @if (!question.IsValid) 
                            { 
                                <b class="text-danger mx-1">@QuestionConstants.Invalid</b> 
                            } 
                        </button>
                    </h2>
                    <div id="flush-collapse-@i" class="accordion-collapse collapse" aria-labelledby="flush-@i" data-bs-parent="#accordionFlush">
                        <div class="accordion-body">
                            <div class="row">
                                @if (Model.UserHasFullRights)
                                {
                                    <div class="col-sm-4 col-12">
                                        <a class="btn btn-primary col-12" asp-area="" asp-controller="Question" asp-action="Details" asp-route-questionId="@question.QuestionId">View question</a>
                                    </div>
                                    <div class="col-sm-4 col-12 my-sm-0 my-2">
                                        <a class="btn btn-warning col-12" asp-area="" asp-controller="Question" asp-action="Update" asp-route-quizId="@question.QuizId" asp-route-questionId="@question.QuestionId" asp-route-questionSequence="@question.QuestionSequence">Edit question</a>
                                    </div>
                                    <div class="col-sm-4 col-12">
                                        <a class="btn btn-danger col-12" asp-area="" asp-controller="Question" asp-action="Delete" asp-route-questionId="@question.QuestionId">Delete question</a>
                                    </div>
                                }
                                else
                                {
                                    if (Model.CanViewQuestionDetails)
                                    {
                                        <a class="btn btn-primary col-12" asp-area="" asp-controller="Question" asp-action="Details" asp-route-questionId="@question.QuestionId">View question</a>
                                    }
                                    else
                                    {
                                        @await Html.PartialAsync("_NothingToDisplay", new NothingToDisplayViewModel() { Message = QuestionConstants.QuestionDetailsNoRights })
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
                i++;
            }
        }
    </div>
}
else
{
    @await Html.PartialAsync("_NothingToDisplay", new NothingToDisplayViewModel() { Message = QuestionConstants.NoneToShow })
}